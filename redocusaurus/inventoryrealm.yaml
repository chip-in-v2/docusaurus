openapi: 3.1.1
info:
  title: Realm Part of Chip-in Inventory API
  version: 1.0.0
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://127.0.0.1:8080
security:
  - bearerAuth: []
tags:
  - name: realm
    description: マイクロサービスをグループ化するための論理的な区分。'/' などパスとして使用できない文字を含むことはできない。
paths:
  /realms:
    get:
      tags:
        - realm
      summary: List realms.
      operationId: listRealms
      parameters:
        - name: '-'
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/QueryParameter'
      responses:
        '200':
          description: |-
            Successful operation, returns a list of realms.
            If no realms are found, an empty array is returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Realm'
        '400':
          description: Bad request, invalid query parameters.
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - realm
      summary: Update an existing realm.
      operationId: updateRealm
      requestBody:
        description: Update an existent realm in the SPN
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Realm'
        required: true
      responses:
        '200':
          description: Successful operation, return the new contents.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Realm'
        '400':
          description: Invalid realm name supplied
        '404':
          description: Realm not found
        '422':
          description: Validation exception
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - realm
      summary: Add a new realm.
      operationId: addRealm
      requestBody:
        description: Create a new realm
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Realm'
        required: true
      responses:
        '200':
          description: Successful operation, return the new contents.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Realm'
        '400':
          description: Invalid realm name supplied or the realm already exists
        '422':
          description: Validation exception
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /realms/{realm}:
    get:
      tags:
        - realm
      summary: Find realm by name.
      operationId: getRealmByName
      parameters:
        - name: realm
          in: path
          description: Name of realm to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation, return the contents.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Realm'
        '404':
          description: Realm not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - realm
      summary: Deletes a realm.
      operationId: deleteRealm
      parameters:
        - name: realm
          in: path
          description: Realm name to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Realm deleted. Returns the deleted contents.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Realm'
        '404':
          description: Realm not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Realm:
      type: object
      required:
        - name
        - title
        - cacert
        - disabled
        - signingKey
      description: |-
        レルムは、SPN内の論理的なグループであり、ゾーンやサブドメイン、仮想ホストなどのリソースを分離して管理するためのコンテナです。
        各レルムは、独自の設定や管理者を持ち、セキュリティやアクセス制御のために使用されます。
      properties:
        name:
          type: string
          pattern: ^[a-z0-9][a-z0-9-]*$
          description: |-
            レルムの名前。URN の一部として使用される。
            文字列は小文字英字、数字、ハイフンのみを含むことができる。
            ただし、ハイフンで始まることはできない。
            名称 "master" は予約されており、使用できない。
          example: example-realm
        title:
          type: string
          description: レルムの日本語名称です。
          example: CMSシステム
        description:
          type: string
          description: レルムの説明文です。
          example: CMSシステムのレルムです。
        urn:
          type: string
          readOnly: true
          format: urn
          description: レルムのURN。形式は `urn:chip-in:realm:{realm-name}` である。
          example: urn:chip-in:realm:example-realm
        cacert:
          type: string
          description: realm 配下の SPN hub で mTLSにおけるクライアント証明書を発行したCA局の証明書(PEM形式)の文字列
          example: |-
            -----BEGIN CERTIFICATE-----
            MIIDXTCCAkWgAwIBAgIJAL5z1Z2k5b4wMA0GCSqGSIb3DQEBCwUAMEUxCzAJBgNV
            ...
            -----END CERTIFICATE-----
        signingKey:
          type: string
          minLength: 24
          description: |-
            realm 配下のAPI Gateway でセッショントークンの署名に使用されるパスワード。
            使用できる文字は英字、数字、ハイフン、アンダースコアのみである。
          example: wUAMEUxCzAJBg1m4uS38-2__
        sessionTimeout:
          type: integer
          description: セッショントークンの有効期限。単位は秒で、デフォルトは 2592000  秒 (30日)。
          example: 2592000
        administrators:
          type: array
          items:
            type: string
          description: レルムの管理者のユーザID。ユーザの管理はインベントリでは行わない。認証サービス内でのみ管理され、ここではそのIDのみを参照する。
          example:
            - chip-in-admin@example.com
        expiredAt:
          type: string
          format: date-time
          description: |-
            レルムの有効期限。ISO8601形式で指定する。
            この日時を過ぎると、レルムの disabled フラグは true となり、関連するリソースへのアクセスが制限される。
          example: '2024-12-31T23:59:59Z'
        disabled:
          type: boolean
          description: |-
            レルムが無効化されているかどうかを示すフラグ。
            true の場合、レルムは無効化されており、関連するリソースへのアクセスが制限される。
            false の場合、レルムは有効であり、通常の操作が可能である。
          example: false
      additionalProperties: false
    QueryParameter:
      type: object
      additionalProperties:
        oneOf:
          - type: string
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
      additionalProperties: false
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
