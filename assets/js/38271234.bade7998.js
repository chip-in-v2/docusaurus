"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6331],{94451:e=>{e.exports=JSON.parse('{"url":"redocusaurus/waitfor-services.yaml","themeId":"theme-redoc","isSpecFile":true,"normalizeUrl":true,"spec":{"openapi":"3.1.1","info":{"title":"Chip-in Wait for Services API","description":"\u3053\u308c\u306fChip-in \u306e\u4eee\u60f3\u30db\u30b9\u30c8\u3067\u63d0\u4f9b\u3055\u308c\u308b\u30b5\u30fc\u30d3\u30b9\u304c\u5229\u7528\u53ef\u80fd\u306b\u306a\u308b\u306e\u3092\u5f85\u3064\u305f\u3081\u306eAPI\u306e\u4ed5\u69d8\u3067\u3059\u3002","contact":{"email":"mitsuru@procube.jp"},"license":{"name":"Apache 2.0","url":"https://www.apache.org/licenses/LICENSE-2.0.html"},"version":"1.0.0"},"servers":[{"url":"https://127.0.0.1:8080"}],"security":[{"bearerAuth":[]}],"paths":{"/.waitforServices":{"get":{"summary":"Wait for Services.","operationId":"waitforServices","parameters":[{"name":"services","in":"query","required":true,"schema":{"type":"array","items":{"type":"string"}},"style":"form","explode":false,"description":"A comma-separated list of service URNs to wait for.\\nThe API will return when all specified services are available.","example":["urn:chip-in:service:example-realm:example-service","urn:chip-in:service:example-realm:another-service"]}],"responses":{"200":{"description":"The list of available service URNs.","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"},"example":["urn:chip-in:service:example-realm:example-service","urn:chip-in:service:example-realm:another-service"]}}}},"404":{"description":"The list of service URNs which is not found in SPN Hub.","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"},"example":["urn:chip-in:service:example-realm:example-service","urn:chip-in:service:example-realm:another-service"]}}}},"default":{"description":"Unexpected error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}}}}},"components":{"schemas":{"Error":{"type":"object","properties":{"code":{"type":"string"},"message":{"type":"string"}},"required":["code","message"],"additionalProperties":false}},"securitySchemes":{"bearerAuth":{"type":"http","scheme":"bearer","bearerFormat":"JWT"}}}}}')}}]);