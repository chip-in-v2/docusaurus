"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7981],{71184:(n,e,r)=>{r.d(e,{R:()=>o,x:()=>c});var s=r(14041);const i={},t=s.createContext(i);function o(n){const e=s.useContext(t);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:o(n.components),s.createElement(t.Provider,{value:e},n.children)}},78609:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"devSpecification/SPN/crate","title":"SPN \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8 crate","description":"\u3053\u306e crate \u306f SPN (Service Provider Network) \u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002","source":"@site/../docs/devSpecification/10-SPN/30-crate.md","sourceDirName":"devSpecification/10-SPN","slug":"/devSpecification/SPN/crate","permalink":"/docs/devSpecification/SPN/crate","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":30,"frontMatter":{},"sidebar":"devSpecification","previous":{"title":"SPN Hub","permalink":"/docs/devSpecification/SPN/hub"},"next":{"title":"SPN \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8","permalink":"/docs/devSpecification/SPN/agent"}}');var i=r(31085),t=r(71184);const o={},c="SPN \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8 crate",l={},d=[{value:"Consumer \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8",id:"consumer-\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8",level:2},{value:"<code>createSpnConsumerEndPoint</code>\u95a2\u6570",id:"createspnconsumerendpoint\u95a2\u6570",level:3},{value:"<code>spnConsumerEndPoint</code> \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9",id:"spnconsumerendpoint-\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9",level:3},{value:"\u5229\u7528\u4f8b",id:"\u5229\u7528\u4f8b",level:3},{value:"TokioStream \u30a2\u30c0\u30d7\u30bf",id:"tokiostream-\u30a2\u30c0\u30d7\u30bf",level:3},{value:"Postgres \u30c9\u30e9\u30a4\u30d0\u306e\u4f8b",id:"postgres-\u30c9\u30e9\u30a4\u30d0\u306e\u4f8b",level:3},{value:"Hyper \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u4f8b",id:"hyper-\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u4f8b",level:3},{value:"Provider \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8",id:"provider-\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8",level:2},{value:"<code>createSpnProviderEndPoint</code>",id:"createspnproviderendpoint",level:3},{value:"<code>spnProviderEndPoint</code> \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9",id:"spnproviderendpoint-\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9",level:3},{value:"<code>spnProviderRequest</code> \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9",id:"spnproviderrequest-\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9",level:3},{value:"\u5229\u7528\u4f8b",id:"\u5229\u7528\u4f8b-1",level:2}];function a(n){const e={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"spn-\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8-crate",children:"SPN \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8 crate"})}),"\n",(0,i.jsxs)(e.p,{children:["\u3053\u306e crate \u306f SPN (Service Provider Network) \u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002",(0,i.jsx)(e.br,{}),"\n","SPN \u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u78ba\u7acb\u3068\u3001\u53cc\u65b9\u5411\u30b9\u30c8\u30ea\u30fc\u30e0\u306b\u3088\u308b\u901a\u4fe1\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002"]}),"\n",(0,i.jsx)(e.h2,{id:"consumer-\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8",children:"Consumer \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8"}),"\n",(0,i.jsxs)(e.h3,{id:"createspnconsumerendpoint\u95a2\u6570",children:[(0,i.jsx)(e.code,{children:"createSpnConsumerEndPoint"}),"\u95a2\u6570"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"async fn createSpnConsumerEndPoint(\n    spnHubUrl: &str,\n    serviceUrn: &str,\n    certificate: &str,\n    certificate_key: &str\n) -> Result<impl spnConsumerEndPoint, SpnError>\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u5f15\u6570"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"spnHubUrl"}),": SPN \u30cf\u30d6\u306e URL"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"serviceUrn"}),": \u30b5\u30fc\u30d3\u30b9\u306e URN"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"certificate"}),": PEM\u5f62\u5f0f\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"certificate_key"}),": PEM\u5f62\u5f0f\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8\u306e\u79d8\u5bc6\u9375"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u623b\u308a\u5024"}),(0,i.jsx)(e.br,{}),"\n","SPN \u30bb\u30c3\u30b7\u30e7\u30f3\u304c\u78ba\u7acb\u3055\u308c\u305f ",(0,i.jsx)(e.code,{children:"spnConsumerEndPoint"})," \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u30cf\u30f3\u30c9\u30eb\u3002\u30a8\u30e9\u30fc\u6642\u306f ",(0,i.jsx)(e.code,{children:"SpnError"}),"\u3002"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u4e3b\u306a\u30a8\u30e9\u30fc\u4f8b"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8\u306e\u8aad\u307f\u8fbc\u307f\u5931\u6557"}),"\n",(0,i.jsx)(e.li,{children:"\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30a8\u30e9\u30fc"}),"\n",(0,i.jsx)(e.li,{children:"SPN Hub \u304b\u3089\u306e\u62d2\u5426"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.h3,{id:"spnconsumerendpoint-\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9",children:[(0,i.jsx)(e.code,{children:"spnConsumerEndPoint"})," \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u30e1\u30bd\u30c3\u30c9"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"async fn connect(&self, stream: BiDirectionalStream) -> Result<(), SpnError>"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\u547c\u3073\u5074\u304c\u4e8b\u524d\u306b\u6e96\u5099\u3057\u305f\u53cc\u65b9\u5411\u30b9\u30c8\u30ea\u30fc\u30e0\u3092SPN\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u306b\u63a5\u7d9a\u3059\u308b\u3002\u30a8\u30e9\u30fc\u6642\u306f ",(0,i.jsx)(e.code,{children:"SpnError"}),"\u3002"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"\u5229\u7528\u4f8b",children:"\u5229\u7528\u4f8b"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'let endpoint = createSpnConsumerEndPoint(\n    "https://spn-hub.example.com",\n    "urn:chip-in:service:example-realm:foo",\n    "/path/to/cert.pem"\n).await?;\n\nlet my_stream = BiDirectionalStream::new(/* ... */);\nendpoint.connect(my_stream).await?;\n// my_stream \u3092\u4f7f\u3063\u3066\u53cc\u65b9\u5411\u901a\u4fe1\u3092\u884c\u3046\n'})}),"\n",(0,i.jsx)(e.h3,{id:"tokiostream-\u30a2\u30c0\u30d7\u30bf",children:"TokioStream \u30a2\u30c0\u30d7\u30bf"}),"\n",(0,i.jsx)(e.p,{children:"spnConsumerEndPoint \u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u30ab\u30b9\u30bf\u30e0\u30b9\u30c8\u30ea\u30fc\u30e0\u3068\u3057\u3066\u4f7f\u7528\u3059\u308b\u5834\u5408\u3001tokio::io::AsyncRead\u3068tokio::io::AsyncWrite\u30c8\u30ec\u30a4\u30c8\u306b\u9069\u5408\u3055\u305b\u308b\u30e9\u30c3\u30d1\u30fc\u304c\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u3002"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-Rust",children:"use tokio::io::{AsyncRead, AsyncWrite, ReadBuf};\nuse std::pin::Pin;\nuse std::task::{Context, Poll};\nuse std::io;\n\npub struct TokioStreamAdapter {\n    inner: BiDirectionalStream,\n}\n\nimpl TokioStreamAdapter {\n    pub fn new(stream: BiDirectionalStream) -> Self {\n        Self { inner: stream }\n    }\n}\n\nimpl AsyncRead for TokioStreamAdapter {\n    fn poll_read(\n        mut self: Pin<&mut Self>,\n        cx: &mut Context<'_>,\n        buf: &mut ReadBuf<'_>,\n    ) -> Poll<io::Result<()>> {\n        // BiDirectionalStream\u306eread\u5b9f\u88c5\u306b\u59d4\u8b72\n        Pin::new(&mut self.inner).poll_read(cx, buf)\n    }\n}\n\nimpl AsyncWrite for TokioStreamAdapter {\n    fn poll_write(\n        mut self: Pin<&mut Self>,\n        cx: &mut Context<'_>,\n        buf: &[u8],\n    ) -> Poll<io::Result<usize>> {\n        // BiDirectionalStream\u306ewrite\u5b9f\u88c5\u306b\u59d4\u8b72\n        Pin::new(&mut self.inner).poll_write(cx, buf)\n    }\n\n    fn poll_flush(\n        mut self: Pin<&mut Self>,\n        cx: &mut Context<'_>,\n    ) -> Poll<io::Result<()>> {\n        Pin::new(&mut self.inner).poll_flush(cx)\n    }\n\n    fn poll_shutdown(\n        mut self: Pin<&mut Self>,\n        cx: &mut Context<'_>,\n    ) -> Poll<io::Result<()>> {\n        Pin::new(&mut self.inner).poll_shutdown(cx)\n    }\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"postgres-\u30c9\u30e9\u30a4\u30d0\u306e\u4f8b",children:"Postgres \u30c9\u30e9\u30a4\u30d0\u306e\u4f8b"}),"\n",(0,i.jsx)(e.p,{children:"spnConsumerEndPoint \u3068\u30e9\u30c3\u30d1\u30fc\u3092\u4f7f\u7528\u3057\u3066 PostgreSQL \u306b\u63a5\u7d9a\u3059\u308b\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-Rust",children:'use tokio_postgres::connect_raw;\n\nlet endpoint = createSpnConsumerEndPoint(\n    "https://spn-hub.example.com",\n    "urn:chip-in:service:example-realm:postgres",\n    "/path/to/cert.pem",\n    "/path/to/key.pem"\n).await?;\n\nlet my_stream = BiDirectionalStream::new(/* ... */);\nendpoint.connect(my_stream).await?;\n\n// TokioStreamAdapter\u3067\u30e9\u30c3\u30d7\nlet adapted_stream = TokioStreamAdapter::new(my_stream);\n\n// tokio-postgres\u306econnect-raw\u306b\u6e21\u3059\nlet (client, connection) = connect_raw(\n    "host=localhost user=postgres",\n    tokio_postgres::NoTls,\n    adapted_stream,\n).await?;\n\n// \u5225\u30bf\u30b9\u30af\u3067connection\u3092\u5b9f\u884c\ntokio::spawn(async move {\n    if let Err(e) = connection.await {\n        eprintln!("connection error: {}", e);\n    }\n});\n\n// client\u3092\u4f7f\u3063\u3066\u30af\u30a8\u30ea\u5b9f\u884c\nlet rows = client.query("SELECT * FROM users", &[]).await?;\n'})}),"\n",(0,i.jsx)(e.h3,{id:"hyper-\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u4f8b",children:"Hyper \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u4f8b"}),"\n",(0,i.jsx)(e.p,{children:"spnConsumerEndPoint \u3068 TokioStreamAdapter \u3092\u4f7f\u7528\u3057\u3066 HTTP/HTTPS \u901a\u4fe1\u3092\u884c\u3046\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'use hyper::{Body, Client, Request};\nuse hyper::client::conn;\n\nlet endpoint = createSpnConsumerEndPoint(\n    "https://spn-hub.example.com",\n    "urn:chip-in:service:example-realm:http-service",\n    "/path/to/cert.pem",\n    "/path/to/key.pem"\n).await?;\n\nlet my_stream = BiDirectionalStream::new(/* ... */);\nendpoint.connect(my_stream).await?;\n\n// TokioStreamAdapter\u3067\u30e9\u30c3\u30d7\nlet adapted_stream = TokioStreamAdapter::new(my_stream);\n\n// hyper\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u30cf\u30f3\u30c9\u30b7\u30a7\u30a4\u30af\nlet (mut sender, connection) = conn::handshake(adapted_stream).await?;\n\n// \u5225\u30bf\u30b9\u30af\u3067connection\u3092\u5b9f\u884c\ntokio::spawn(async move {\n    if let Err(e) = connection.await {\n        eprintln!("connection error: {}", e);\n    }\n});\n\n// HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\nlet request = Request::builder()\n    .method("GET")\n    .uri("/api/users")\n    .header("Host", "example.com")\n    .body(Body::empty())?;\n\nlet response = sender.send_request(request).await?;\nprintln!("Response status: {}", response.status());\n\n// \u30ec\u30b9\u30dd\u30f3\u30b9\u30dc\u30c7\u30a3\u3092\u8aad\u307f\u53d6\u308b\nlet body_bytes = hyper::body::to_bytes(response.into_body()).await?;\nprintln!("Response body: {:?}", body_bytes);\n'})}),"\n",(0,i.jsx)(e.h2,{id:"provider-\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8",children:"Provider \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8"}),"\n",(0,i.jsx)(e.h3,{id:"createspnproviderendpoint",children:(0,i.jsx)(e.code,{children:"createSpnProviderEndPoint"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"async fn createSpnProviderEndPoint(\n    spnHubUrl: &str,\n    serviceUrn: &str,\n    certificate: &str,\n    certificate_key: &str\n) -> Result<impl spnProviderEndPoint, SpnError>\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u5f15\u6570"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"spnHubUrl"}),": SPN \u30cf\u30d6\u306e URL"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"serviceUrn"}),": \u30b5\u30fc\u30d3\u30b9\u306e URN"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"certificate"}),": PEM\u5f62\u5f0f\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"certificate_key"}),": PEM\u5f62\u5f0f\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8\u306e\u79d8\u5bc6\u9375"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u623b\u308a\u5024"}),(0,i.jsx)(e.br,{}),"\n","SPN \u30bb\u30c3\u30b7\u30e7\u30f3\u304c\u78ba\u7acb\u3055\u308c\u305f ",(0,i.jsx)(e.code,{children:"spnProviderEndPoint"})," \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u30cf\u30f3\u30c9\u30eb\u3002\u30a8\u30e9\u30fc\u6642\u306f ",(0,i.jsx)(e.code,{children:"SpnError"}),"\u3002"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u4e3b\u306a\u30a8\u30e9\u30fc\u4f8b"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u30d7\u30ed\u30d0\u30a4\u30c0\u8a3c\u660e\u66f8\u306e\u8aad\u307f\u8fbc\u307f\u5931\u6557"}),"\n",(0,i.jsx)(e.li,{children:"\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30a8\u30e9\u30fc"}),"\n",(0,i.jsx)(e.li,{children:"SPN Hub \u304b\u3089\u306e\u62d2\u5426"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.h3,{id:"spnproviderendpoint-\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9",children:[(0,i.jsx)(e.code,{children:"spnProviderEndPoint"})," \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u30e1\u30bd\u30c3\u30c9"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"async fn listen(&self) -> Result<spnProviderRequest, SpnError>"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\u65b0\u305f\u306a SPN \u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u306e\u63a5\u7d9a\u3092\u5f85\u3061\u53d7\u3051\u3001\u63a5\u7d9a\u3055\u308c\u308b\u3068 ",(0,i.jsx)(e.code,{children:"spnProviderRequest"})," \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u8fd4\u3059\u3002\u30a8\u30e9\u30fc\u6642\u306f ",(0,i.jsx)(e.code,{children:"SpnError"}),"\u3002"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.h3,{id:"spnproviderrequest-\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9",children:[(0,i.jsx)(e.code,{children:"spnProviderRequest"})," \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u30e1\u30bd\u30c3\u30c9"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"async fn accept(&self) -> Result<BiDirectionalStream, SpnError>"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["SPN \u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u63a5\u7d9a\u3057\u3001\u53cc\u65b9\u5411\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u8fd4\u3059\u3002\u30a8\u30e9\u30fc\u6642\u306f ",(0,i.jsx)(e.code,{children:"SpnError"}),"\u3002"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"\u5229\u7528\u4f8b-1",children:"\u5229\u7528\u4f8b"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'let provider = createSpnProviderEndPoint(\n    "https://spn-hub.example.com",\n    "urn:chip-in:service:example-realm:foo",\n    "/path/to/cert.pem"\n).await?;\n\nlet request = provider.listen().await?;\nlet stream = request.accept().await?;\n// stream \u3092\u4f7f\u3063\u3066\u53cc\u65b9\u5411\u901a\u4fe1\u3092\u884c\u3046\n'})})]})}function p(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(a,{...n})}):a(n)}}}]);