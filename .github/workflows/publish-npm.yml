name: Publish to GitHub Packages

on:
  push:
    branches:
      - main
    paths:
      - 'packages/docusaurus/**'

permissions:
  contents: write
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js for GitHub Packages
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@${{ github.repository_owner }}'

      - name: Get version to be released
        id: get-version
        run: |
          cd packages/docusaurus
          PACKAGE_VERSION=$(node -e "console.log(require('./package.json').version)")
          echo "Current version: ${PACKAGE_VERSION}"
          
          if [[ "${PACKAGE_VERSION}" == *"-rc"* ]]; then
            echo "RC version detected. Bumping to patch version..."
            npm version patch --no-git-tag-version
            PACKAGE_VERSION=$(node -e "console.log(require('./package.json').version)")
            echo "New version: ${PACKAGE_VERSION}"
          fi
          
          echo "version=${PACKAGE_VERSION}" >> "$GITHUB_OUTPUT"
      
      - name: Install dependencies
        run: npm install --no-audit --no-fund --ci
      
      - name: Configure npm for GitHub Packages
        run: |
          echo "@${{ github.repository_owner }}:registry=https://npm.pkg.github.com" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .npmrc
      
      - name: GitHub Packages にパッケージを公開
        run: npm publish --workspace=packages/docusaurus
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Git tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a "v${{ steps.get-version.outputs.version }}" -m "Release version ${{ steps.get-version.outputs.version }}"
          git push origin "v${{ steps.get-version.outputs.version }}"
      
