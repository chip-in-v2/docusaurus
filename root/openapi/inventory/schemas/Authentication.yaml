type: object
title: Checkout Session
description: |-
  このアクションは、CHIPIN_SESSION_ID Cookie の値をキーとして、セッション情報を取得します。
  状況に応じて以下の処理を行います。
  |状況|処理|
  |---|---|
  |パスがリダイレクトパス(oidcRecirectPath パラメータで指定)と一致する場合|パラメータに付与されている認可コードを使用して IdP からアクセストークンとリフレッシュトークンを取得します。成功した場合はリクエストのパスを元のパスに書き換えて次のフローに進みます。|
  |CHIPIN_SESSION_ID Cookie が存在しない|失敗を返す|
  |CHIPIN_SESSION_ID Cookie が存在するが、セッション情報がセッションテーブルに見つからない|失敗を返す|
  |CHIPIN_SESSION_ID Cookie が存在し、セッション情報がセッションテーブルに見つかった|セッション情報のアクセストークンを確認して、次のフローに進む|

  ### セッション情報のアクセストークン確認
  セッション情報のアクセストークンの状態により、以下の処理を行います。

  |トークンの状態|処理|
  |---|---|
  |アクセストークンの有効期限が切れていない|セッション情報をリクエストオブジェクトの変数として保存して処理を進めます。|
  |アクセストークンの有効期限が切れている|リフレッシュトークンを使用してアクセストークンを取得します|
  |前行でトークンの取得に失敗した|失敗を返します。|

  ### トークン取得処理
  [トークンエンドポイントの仕様](https://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint)に従って IdP からトークンを取得します。
  リクエストのメソッドはPOST、Content-Type ヘッダは application/x-www-form-urlencoded とします。

  リクエストボディには以下のパラメータを指定します。
  |パラメータ名|値|
  |--|--|
  |grant_type|authorization_code（認可コードで取得する場合） または refresh_token（リフレッシュトークンで取得する場合）|
  |code|認可コード (grant_type が authorization_code の場合)|
  |refresh_token|リフレッシュトークン (grant_type が refresh_token の場合)|
  |redirect_uri|```https://\{virtual-host-fqdn\}\{oidcRecirectPath パラメータで指定された値\}``` (grant_type が authorization_code の場合)|
  |client_id|oidcClientId パラメータで指定された値|
  |client_secret|oidcClientSecret パラメータで指定された値|

  取得に成功した場合は、以下の動作を行います。
  - セッション情報を作成し、セッション情報テーブルに保存します。更新の場合はトークンのみを上書きします。
  - レスポンスヘッダに Set-Cookie ヘッダを追加して CHIPIN_SESSION_ID Cookie にセッションIDを設定します。Cookie が設定済みの場合でも有効期限を更新します。

  ### 失敗を返す場合のレスポンス
  失敗を返す場合のレスポンスはリクエストのパスがログイン画面へのリダイレクトを受け入れられるかどうかによって異なります。
  - 失敗原因がOIDC IdPへの接続エラーなどのサーバ側のエラーである場合、500 Internal Server Error レスポンスを返します
  - ログイン画面へのリダイレクトを受け入れられる場合でメソッドがGETの場合、ログイン画面へのリダイレクト処理を行います。
  - 上記以外の場合、401 Unauthorized レスポンスを返します。このとき、Accept ヘッダーで application/json が指定されている場合は JSON 形式で、text/html が指定されている場合は HTML 形式でレスポンスボディを返します。

  ### ログイン画面へのリダイレクト
  以下の処理を実施して、 IdP のログイン画面へのリダイレクトを行います。
  - レスポンスの Location ヘッダに IdP の認証要求URLを指定
    - URLには認証要求エンドポイント（oidcAuthorizationEndpoint パラメータで指定）を使用
    - [トークンエンドポイントの仕様](https://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint)に従ってクエリパラメータとして以下を指定
      |パラメータ名|値|
      |--|--|
      |response_type|"code"|
      |client_id|oidcClientId パラメータで指定された値|
      |redirect_uri|```https://\{oidcAuthorizationEndpoint パラメータで指定された値\}\{oidcRecirectPath パラメータで指定された値\}?original_path=\{元のリクエストのURLをパーセントエンコーディングしたもの\}```をパーセントエンコーディングしたもの|
      |scope|"openid"|
      |state|\{ランダムな値\} (CSRF 対策のために使用される。実装ではセッション情報に保存し、リダイレクト後のコールバックで検証すること)|
      |nonce|\{ランダムな値\} (ID トークンの再生攻撃対策のために使用される。実装ではセッション情報に保存し、ID トークン受領後に検証すること)|
  - ステータスコードを 302 に設定


  ### 次のフローに進む
  セッション情報をリクエストオブジェクトの変数として保存します。
  認可コードで新しくトークンを受け取る処理をした場合には、その original_path クエリパラメータで指定されたパスにリクエストのパスを書き換えます。
  その後、ルーティングチェインの次のルールに従って処理を続行します。

required: 
  - type
properties:
  type:
    type: string
    enum: [authentication]
  oidcClientId:
    type: string
    description: |-
      セッション情報を取得するために使用する OIDC クライアントのIDを指定します。
    example: chipin-web
  oidcClientSecret:
    type: string
    description: |-
      セッション情報を取得するために使用する OIDC クライアントのシークレットを指定します。
    example: secret
  oidcAuthorizationEndpoint:
    type: string
    description: |-
      OIDC IdP の認可エンドポイントのURLを指定します。
    example: https://auth.example.com/auth/realms/chip-in/protocol/openid-connect/auth
  oidcRecirectPath:
    type: string
    description: |-
      OIDC の認可コードフローにおけるリダイレクトURIのパス部分を指定します。
      例えば、`/auth/callback` と指定すると、`https://{virtual-host-fqdn}/auth/callback` がリダイレクトURIとなります。
    example: /auth/callback
  oidcTokenEndpoint:
    type: string
    description: |-
      OIDC IdP のトークンエンドポイントのURLを指定します。
    example: https://auth.example.com/auth/realms/chip-in/protocol/openid-connect/token
  oidcService:
    type: string
    description: |-
      OIDC IdP のトークンエンドポイントを提供する SPN上のサービス名を指定します。指定されると、TokenエンドポイントにSPN経由でアクセスします。
      この場合、アクセスは HTTP の平文でのアクセスとなり、 SPN 上のサービスに送られます。
    example: auth.example.com
  acceptLoginRedirectPathRegex:
    type: string
    description: |-
      ログイン画面へのリダイレクトを受け入れられるリクエストのパスを正規表現で指定します。
      例えば、`^/app/.*$` と指定すると、`/app/` 配下へのリクエストにおいてのみセッションの取得に失敗した場合はログイン画面へのリダイレクトを返します。
      デフォルトでは、すべてのパスにおいてセッションの取得に失敗した場合は 401 Unauthorized を返します。
    example: ^/app/.*$
additionalProperties: false